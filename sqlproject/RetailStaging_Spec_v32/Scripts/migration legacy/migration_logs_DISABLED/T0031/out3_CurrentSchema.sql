/*
Deployment script for Placeholder

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Placeholder"
:setvar DefaultFilePrefix "Placeholder"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Role Membership [db_datareader] for [RemoteSQLUser]...';


GO
EXECUTE sp_addrolemember @rolename = N'db_datareader', @membername = N'RemoteSQLUser';


GO
PRINT N'Creating Role Membership [db_datawriter] for [RemoteSQLUser]...';


GO
EXECUTE sp_addrolemember @rolename = N'db_datawriter', @membername = N'RemoteSQLUser';


GO
PRINT N'Creating Table [dbo].[DimCustomer]...';


GO
CREATE TABLE [dbo].[DimCustomer] (
    [CustomerID]   INT            NOT NULL,
    [CustomerName] NVARCHAR (80)  NOT NULL,
    [Gender]       CHAR (1)       NULL,
    [BirthDate]    DATE           NULL,
    [Email]        NVARCHAR (120) NULL,
    [Phone]        NVARCHAR (30)  NULL,
    [LoyaltyTier]  NVARCHAR (20)  NULL,
    [LoadDate]     DATETIME       NOT NULL,
    [SourceSystem] NVARCHAR (50)  NOT NULL,
    [RecordHash]   NVARCHAR (64)  NULL,
    PRIMARY KEY CLUSTERED ([CustomerID] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimDate]...';


GO
CREATE TABLE [dbo].[DimDate] (
    [DateID]       INT           NOT NULL,
    [FullDate]     DATE          NOT NULL,
    [Year]         SMALLINT      NOT NULL,
    [Quarter]      TINYINT       NOT NULL,
    [MonthNo]      TINYINT       NOT NULL,
    [MonthName]    NVARCHAR (9)  NOT NULL,
    [DayOfWeek]    NVARCHAR (9)  NOT NULL,
    [LoadDate]     DATETIME      NOT NULL,
    [SourceSystem] NVARCHAR (50) NOT NULL,
    [RecordHash]   NVARCHAR (64) NULL,
    PRIMARY KEY CLUSTERED ([DateID] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimProduct]...';


GO
CREATE TABLE [dbo].[DimProduct] (
    [DimProductSK]   INT            IDENTITY (1, 1) NOT NULL,
    [ProductID]      INT            NOT NULL,
    [ProductName]    NVARCHAR (60)  NOT NULL,
    [CategoryKey]    INT            NOT NULL,
    [SubCategoryKey] INT            NOT NULL,
    [SupplierID]     INT            NOT NULL,
    [ReorderLevel]   SMALLINT       NOT NULL,
    [UnitCost]       DECIMAL (7, 2) NOT NULL,
    [UnitPrice]      DECIMAL (7, 2) NOT NULL,
    [Status]         NVARCHAR (15)  NULL,
    [ValidFrom]      DATE           NOT NULL,
    [ValidTo]        DATE           NOT NULL,
    [IsCurrent]      BIT            NOT NULL,
    [LoadDate]       DATETIME       NOT NULL,
    [SourceSystem]   NVARCHAR (50)  NOT NULL,
    [RecordHash]     NVARCHAR (64)  NULL,
    PRIMARY KEY CLUSTERED ([DimProductSK] ASC),
    UNIQUE NONCLUSTERED ([ProductID] ASC, [ValidFrom] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimSalesRep]...';


GO
CREATE TABLE [dbo].[DimSalesRep] (
    [SalesRepID]   INT           NOT NULL,
    [SalesRepName] NVARCHAR (80) NOT NULL,
    [Region]       NVARCHAR (40) NULL,
    [HireDate]     DATE          NULL,
    [TermDate]     DATE          NULL,
    [Status]       NVARCHAR (15) NULL,
    [LoadDate]     DATETIME      NOT NULL,
    [SourceSystem] NVARCHAR (50) NOT NULL,
    [RecordHash]   NVARCHAR (64) NULL,
    PRIMARY KEY CLUSTERED ([SalesRepID] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimSourceSystem]...';


GO
CREATE TABLE [dbo].[DimSourceSystem] (
    [SourceSystemCode] NVARCHAR (50)  NOT NULL,
    [Description]      NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([SourceSystemCode] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimStore]...';


GO
CREATE TABLE [dbo].[DimStore] (
    [DimStoreSK]   INT           IDENTITY (1, 1) NOT NULL,
    [StoreID]      INT           NOT NULL,
    [StoreName]    NVARCHAR (80) NOT NULL,
    [Region]       NVARCHAR (40) NULL,
    [StoreType]    NVARCHAR (25) NULL,
    [Status]       NVARCHAR (15) NULL,
    [ValidFrom]    DATE          NOT NULL,
    [ValidTo]      DATE          NOT NULL,
    [IsCurrent]    BIT           NOT NULL,
    [LoadDate]     DATETIME      NOT NULL,
    [SourceSystem] NVARCHAR (50) NOT NULL,
    [RecordHash]   NVARCHAR (64) NULL,
    PRIMARY KEY CLUSTERED ([DimStoreSK] ASC),
    UNIQUE NONCLUSTERED ([StoreID] ASC, [ValidFrom] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimCustomer]...';


GO
ALTER TABLE [dbo].[DimCustomer]
    ADD DEFAULT ('UNKNOWN') FOR [SourceSystem];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimCustomer]...';


GO
ALTER TABLE [dbo].[DimCustomer]
    ADD DEFAULT (getutcdate()) FOR [LoadDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimDate]...';


GO
ALTER TABLE [dbo].[DimDate]
    ADD DEFAULT ('UNKNOWN') FOR [SourceSystem];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimDate]...';


GO
ALTER TABLE [dbo].[DimDate]
    ADD DEFAULT (getutcdate()) FOR [LoadDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct]
    ADD DEFAULT ('UNKNOWN') FOR [SourceSystem];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct]
    ADD DEFAULT ((1)) FOR [IsCurrent];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct]
    ADD DEFAULT ('9999-12-31') FOR [ValidTo];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct]
    ADD DEFAULT (getutcdate()) FOR [LoadDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimSalesRep]...';


GO
ALTER TABLE [dbo].[DimSalesRep]
    ADD DEFAULT (getutcdate()) FOR [LoadDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimSalesRep]...';


GO
ALTER TABLE [dbo].[DimSalesRep]
    ADD DEFAULT ('UNKNOWN') FOR [SourceSystem];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore]
    ADD DEFAULT ((1)) FOR [IsCurrent];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore]
    ADD DEFAULT ('UNKNOWN') FOR [SourceSystem];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore]
    ADD DEFAULT (getutcdate()) FOR [LoadDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore]
    ADD DEFAULT ('9999-12-31') FOR [ValidTo];


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimCustomer]...';


GO
ALTER TABLE [dbo].[DimCustomer] WITH NOCHECK
    ADD CHECK ([SourceSystem]='CSV' OR [SourceSystem]='CRM' OR [SourceSystem]='ERP' OR [SourceSystem]='POS');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimCustomer]...';


GO
ALTER TABLE [dbo].[DimCustomer] WITH NOCHECK
    ADD CHECK ([Gender]='F' OR [Gender]='M');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimCustomer]...';


GO
ALTER TABLE [dbo].[DimCustomer] WITH NOCHECK
    ADD CHECK ([RecordHash] IS NULL OR len([RecordHash])=(64));


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimDate]...';


GO
ALTER TABLE [dbo].[DimDate] WITH NOCHECK
    ADD CHECK ([SourceSystem]='CSV' OR [SourceSystem]='CRM' OR [SourceSystem]='ERP' OR [SourceSystem]='POS');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct] WITH NOCHECK
    ADD CHECK ([RecordHash] IS NULL OR len([RecordHash])=(64));


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimProduct]...';


GO
ALTER TABLE [dbo].[DimProduct] WITH NOCHECK
    ADD CHECK ([SourceSystem]='CSV' OR [SourceSystem]='CRM' OR [SourceSystem]='ERP' OR [SourceSystem]='POS');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimSalesRep]...';


GO
ALTER TABLE [dbo].[DimSalesRep] WITH NOCHECK
    ADD CHECK ([RecordHash] IS NULL OR len([RecordHash])=(64));


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimSalesRep]...';


GO
ALTER TABLE [dbo].[DimSalesRep] WITH NOCHECK
    ADD CHECK ([SourceSystem]='CSV' OR [SourceSystem]='CRM' OR [SourceSystem]='ERP' OR [SourceSystem]='POS');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore] WITH NOCHECK
    ADD CHECK ([SourceSystem]='CSV' OR [SourceSystem]='CRM' OR [SourceSystem]='ERP' OR [SourceSystem]='POS');


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[DimStore]...';


GO
ALTER TABLE [dbo].[DimStore] WITH NOCHECK
    ADD CHECK ([RecordHash] IS NULL OR len([RecordHash])=(64));


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.DimCustomer'), OBJECT_ID(N'dbo.DimDate'), OBJECT_ID(N'dbo.DimProduct'), OBJECT_ID(N'dbo.DimSalesRep'), OBJECT_ID(N'dbo.DimStore'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
